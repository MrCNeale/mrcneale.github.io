<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>PowerShell on Chris Neales Blog</title>
    <link>https://www.chrisneale.org/tags/powershell/</link>
    <description>Recent content in PowerShell on Chris Neales Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 14 May 2021 22:00:00 +0000</lastBuildDate><atom:link href="https://www.chrisneale.org/tags/powershell/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Powershell to retreive Alerts which use a specific Action Group</title>
      <link>https://www.chrisneale.org/posts/2021-05-14-powershell-to-retreive-alerts-which-use-a-specific-action-group/</link>
      <pubDate>Fri, 14 May 2021 22:00:00 +0000</pubDate>
      
      <guid>https://www.chrisneale.org/posts/2021-05-14-powershell-to-retreive-alerts-which-use-a-specific-action-group/</guid>
      <description>Two simple queries help here:
To check if any Metric alerts point to your Action Group, run
Get-AzMetricAlertRuleV2 | ?{$_.actions.ActionGroupId -like &amp;#39;YourActionGroupName&amp;#39;} To check if any Log Alerts (Known as Scheduled Query alerts since classic was retired) run
Get-AzScheduledQueryRule | ?{$_.action.aznsaction.actiongroup -like &amp;#39;&amp;#39;YourActionGroupName&amp;#39;} Now you know if the Action Group is being used, and can be safely removed.</description>
    </item>
    
    <item>
      <title>Powershell to retreive Azure VM Memory Size</title>
      <link>https://www.chrisneale.org/posts/2020-04-27-powershell-to-retreive-azure-vm-memory-size/</link>
      <pubDate>Mon, 27 Apr 2020 22:00:00 +0000</pubDate>
      
      <guid>https://www.chrisneale.org/posts/2020-04-27-powershell-to-retreive-azure-vm-memory-size/</guid>
      <description>Now you have the two parts of the puzzle, you just need to knit them together. First get a list of all your VMs (you could filter if you wanted)
$vms=get-azvm Now get a list of VM t-shirt sizes (I use eastus as it&amp;rsquo;s usually the most complete list of sizes)
$vmsizelist = Get-AzVMSize -Location eastus Now we loop through each vm, get it&amp;rsquo;s hardware profile. Read the VMSize property, then go find that row in the t-shirt size table, and find how much memory that t-shirt size has.</description>
    </item>
    
    <item>
      <title>Exam Experience - AZ-500 Microsoft Azure Security Technologies (Microsoft Certified Azure Security Engineer Associate)</title>
      <link>https://www.chrisneale.org/posts/2020-02-11-az500examexperience/</link>
      <pubDate>Tue, 11 Feb 2020 22:00:00 +0000</pubDate>
      
      <guid>https://www.chrisneale.org/posts/2020-02-11-az500examexperience/</guid>
      <description>I spent a few nights watching some pre-recorded study sessions delivered by a colleague Dan Oliver which were great and covered all the material in the exam areas, in varying degrees of depth as they were 1-2hrs sessions.
It was watching these that reenforced my understanding that this was possibly the broadest area of Azure. It&amp;rsquo;s obvious that security affects all things.
With the popularity of DevOPs and now DevSecOPs, we should all know that &amp;ldquo;Security should be baked in from the start&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>Get-Module AZ fails because Azure=Azerbaijan</title>
      <link>https://www.chrisneale.org/posts/2019-10-28-get-module-az-fails-because-azureazerbaijan/</link>
      <pubDate>Mon, 28 Oct 2019 22:00:00 +0000</pubDate>
      
      <guid>https://www.chrisneale.org/posts/2019-10-28-get-module-az-fails-because-azureazerbaijan/</guid>
      <description>Including pre-req checks in your code is good practice&amp;hellip;.so you add it in.
In our Powershell scripts which require Azure Powershell cmdlets we have moved, as should anyone keeping abreast of releases, to Powershell Core.
But our checks to see if the Az Module is installed were giving mixed results.
Even though the commands all worked, Get-AzVM etc. the module check for &amp;ldquo;Az&amp;rdquo; returned nothing, blank, nada.
But if you check for a sub module, e.</description>
    </item>
    
    <item>
      <title>Exam Experience - AZ-103 Microsoft Azure Administrator</title>
      <link>https://www.chrisneale.org/posts/2019-08-12-az-103-exam-experience-and-study-advice/</link>
      <pubDate>Mon, 12 Aug 2019 22:00:00 +0000</pubDate>
      
      <guid>https://www.chrisneale.org/posts/2019-08-12-az-103-exam-experience-and-study-advice/</guid>
      <description>This exam felt very familiar. The questions were not vastly changed from 70-533 which I sat last year, and the format was the same as AZ-302 in that the exam is divided into sections:
Traditional Multiple choice Scenario based multiple choice, where the same scenario will be offered for many questions and different solutions proposed. You have to answer if the proposed solution will meet the requirements Labs. Where you actually log in to an Azure Portal and do things.</description>
    </item>
    
    <item>
      <title>Azure Instance Metadata Service Usage Examples</title>
      <link>https://www.chrisneale.org/posts/2019-05-10-azure-instance-metadata-service-101/</link>
      <pubDate>Fri, 10 May 2019 22:00:00 +0000</pubDate>
      
      <guid>https://www.chrisneale.org/posts/2019-05-10-azure-instance-metadata-service-101/</guid>
      <description>What does Azure have that VMware never had? AKA What is the Azure Instance Metadata Service? There&amp;rsquo;s probably a ton of answers here. But the one I was angling for is &amp;ldquo;Which vCenter is my VM running on?&amp;rdquo;
Who&amp;rsquo;d be crazy enough to lose a VM? Well you&amp;rsquo;d be surprised in enterprise estates that have been running for 10 years and Sue who managed the VM farm just retired and moved to Cypus so you can&amp;rsquo;t get hold of her to ask&amp;hellip; Anyway, what I&amp;rsquo;m going to talk about it more useful than just finding out where your VM is if you (or your script/code) only has access inside the VM.</description>
    </item>
    
    <item>
      <title>Exam Experience - AZ-302 Microsoft Azure Solutions Architect Certification Transition</title>
      <link>https://www.chrisneale.org/posts/2019-03-28-az-302-exam-experience-and-study-advice/</link>
      <pubDate>Thu, 28 Mar 2019 22:00:00 +0000</pubDate>
      
      <guid>https://www.chrisneale.org/posts/2019-03-28-az-302-exam-experience-and-study-advice/</guid>
      <description>It&amp;rsquo;s also due to retire at the end of June, so if you&amp;rsquo;re reading this now&amp;hellip;GET STUDYING! :-)
As usual the IaaS sections and IAM/AD/Security areas, which I have most background in were quite simple to absorb. Where I had to pay much more attention is around the PaaS/Serverless application space. So Web Apps, Functions, Batch, Event Grids etc.
This may be different for you, but where I am currently we&amp;rsquo;re still helping a lot of customers move from on-prem into cloud, so they haven&amp;rsquo;t expanded or transformed to start using PaaS services heavily.</description>
    </item>
    
    <item>
      <title>Using the Azure Load Balancer in reverse to funnel all outgoing traffic via a single IP</title>
      <link>https://www.chrisneale.org/posts/2018-07-16-azurelbasinternetgateway/</link>
      <pubDate>Mon, 16 Jul 2018 22:00:00 +0000</pubDate>
      
      <guid>https://www.chrisneale.org/posts/2018-07-16-azurelbasinternetgateway/</guid>
      <description>As you may know even if your default Azure VM does not have a Public IP assigned to it, it can still access the internet for things like windows updates etc. However when it does so the Public IP it appears to have come from is ephemeral and changes. Similarly each VM will have different IPs. For a reason known to the SAP team, they needed all VMs to appear to be coming from the same IP.</description>
    </item>
    
    <item>
      <title>Exam Experience - 70-533 Implementing Microsoft Azure Infrastructure Solutions - (Post Jan 2018 Updates)</title>
      <link>https://www.chrisneale.org/posts/2018-03-06-exam-experience-70-533/</link>
      <pubDate>Tue, 06 Mar 2018 22:00:00 +0000</pubDate>
      
      <guid>https://www.chrisneale.org/posts/2018-03-06-exam-experience-70-533/</guid>
      <description>It also had a number of other concepts which have been migrated over that time into Azure Resource Manager as a deployment method.
Initially that had me concerned as I came to Azure 12 months ago fresh onto ARM. It was new at first but I didn&amp;rsquo;t have any ASM baggage. I saw the exam still had lots of ASM content when I looked into it last summer. But there have been TWO updates to the exam since then.</description>
    </item>
    
    <item>
      <title>Gotcha when importing client certificates for Azure P2S VPN</title>
      <link>https://www.chrisneale.org/posts/2017-10-17-gotcha-with-azure-p2s-vpn-certificates/</link>
      <pubDate>Tue, 17 Oct 2017 22:00:00 +0000</pubDate>
      
      <guid>https://www.chrisneale.org/posts/2017-10-17-gotcha-with-azure-p2s-vpn-certificates/</guid>
      <description>So the simple solution is that:
When importing a VPN Client Cert and you are presented with the option to &amp;ldquo;Enable strong private key protection&amp;rdquo;, untick it. If you&amp;rsquo;re on a newer OS, you won&amp;rsquo;t get this prompt (tested on Server 2016). Now this is in the troubleshooting guide, but it should be in the instructions, rather than something you have to search for after the fact. https://docs.microsoft.com/en-us/azure/vpn-gateway/vpn-gateway-troubleshoot-vpn-point-to-site-connection-problems
So RTFM, and also any related KBs&amp;hellip;.</description>
    </item>
    
    <item>
      <title>Leveraging Keepass via Powershell-Part 2</title>
      <link>https://www.chrisneale.org/posts/2017-03-14-keepassinpowershell-part2/</link>
      <pubDate>Tue, 14 Mar 2017 22:00:00 +0000</pubDate>
      
      <guid>https://www.chrisneale.org/posts/2017-03-14-keepassinpowershell-part2/</guid>
      <description>Last time round we did 3 things</description>
    </item>
    
    <item>
      <title>Leveraging Keepass via Powershell to Keep Passwords Out of Scripts</title>
      <link>https://www.chrisneale.org/posts/2017-02-06-leveragingkeepassinpowershell-part1/</link>
      <pubDate>Mon, 06 Feb 2017 22:00:00 +0000</pubDate>
      
      <guid>https://www.chrisneale.org/posts/2017-02-06-leveragingkeepassinpowershell-part1/</guid>
      <description>Passwords visible in scripts&amp;hellip;.just say that out loud. If that doesn&amp;rsquo;t make you itch with a compelling urge to take the author to one side and have seriously stern words with them, then feel free to move on to the next blog&amp;hellip;.but you&amp;rsquo;re a bad person!
It&amp;rsquo;s something no-one should have to see, but sometimes, for brevity it happens. Someone hard codes a password in a script/program &amp;ldquo;just to test&amp;rdquo;. Well it&amp;rsquo;s a bad habit to get in to.</description>
    </item>
    
    <item>
      <title>PowerCLI running in a Docker Container on Photon OS in under 10 minutes</title>
      <link>https://www.chrisneale.org/posts/2016-11-07-docker-powerclicore-sub10mins/</link>
      <pubDate>Mon, 07 Nov 2016 22:00:00 +0000</pubDate>
      
      <guid>https://www.chrisneale.org/posts/2016-11-07-docker-powerclicore-sub10mins/</guid>
      <description>I needed a utility VM to run a PowerCLI script as a scheduled task.
I set out to do this using Windows but stopped as VMware&amp;rsquo;s Geniuses had just released the PowerCLIcore Fling. This instantly made me think, smaller footprint, quicker to deploy, zero OS license cost&amp;hellip;&amp;hellip;No Brainer really
To recreate this all you need is something to host your Photon VM. Standalone ESXi host or VMWorkstation.
Oh and a VCSA/ESXi to connect to (v5.</description>
    </item>
    
  </channel>
</rss>
